name: Android Build & Release

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:
    inputs:
      build_type:
        description: 'Build type'
        required: true
        default: 'debug'
        type: choice
        options:
        - debug
        - release
      upload_to_release:
        description: 'Upload to GitHub Release'
        required: false
        default: false
        type: boolean

env:
  GRADLE_OPTS: -Dorg.gradle.daemon=false -Dorg.gradle.parallel=true -Dorg.gradle.jvmargs=-Xmx2048m

jobs:
  build:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        build-type: [debug, release]
        exclude:
          - build-type: release
            if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: 'gradle'
        
    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
          ~/.android/build-cache
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Validate Gradle wrapper
      run: ./gradlew --version
      
    - name: Build with Gradle
      run: ./gradlew assemble${{ matrix.build-type }}
      
    - name: Run tests
      run: ./gradlew test
      continue-on-error: true
      
    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: app-${{ matrix.build-type }}
        path: app/build/outputs/apk/${{ matrix.build-type }}/app-${{ matrix.build-type }}.apk
        retention-days: 30
        
    - name: Generate build info
      run: |
        echo "## Build Information" >> $GITHUB_STEP_SUMMARY
        echo "- **Build Type**: ${{ matrix.build-type }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Branch**: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Build Time**: $(date)" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "## Download Links" >> $GITHUB_STEP_SUMMARY
        echo "- 📱 APK: app-${{ matrix.build-type }}.apk" >> $GITHUB_STEP_SUMMARY
        echo "- 📦 Available in Actions artifacts" >> $GITHUB_STEP_SUMMARY

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.event.inputs.upload_to_release == 'true' && github.event_name == 'workflow_dispatch'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download APK artifacts
      uses: actions/download-artifact@v4
      with:
        name: app-release
        
    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.run_number }}
        release_name: Release v${{ github.run_number }}
        body: |
          ## Android Finder App Release
          
          ### What's New
          - Latest build from ${{ github.ref_name }} branch
          - Build number: ${{ github.run_number }}
          
          ### Installation
          1. Download the APK file below
          2. Enable "Unknown sources" on your Android device
          3. Install the APK
          4. Grant necessary permissions
          
          ### Features
          - 📍 Location tracking
          - 📱 App usage statistics  
          - 🔋 Device information monitoring
          - 💾 Local data storage
          
          ### Requirements
          - Android 7.0 (API 24) or higher
        draft: false
        prerelease: false
        
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./app-release.apk
        asset_name: Finder-Tracker-v${{ github.run_number }}.apk
        asset_content_type: application/vnd.android.package-archive

  notify:
    needs: [build, release]
    runs-on: ubuntu-latest
    if: always()
    
    steps:
    - name: Notify build status
      run: |
        if [ "${{ needs.build.result }}" == "success" ]; then
          echo "✅ Build completed successfully!"
          echo "📱 APK files are available for download"
        else
          echo "❌ Build failed!"
          echo "Please check the build logs for errors"
        fi 